{"version":3,"names":["useEffect","useRef","Uppy","UppyCore","useUppy","factory","TypeError","uppy","undefined","current","_uppy$current","close","reason"],"sources":["useUppy.ts"],"sourcesContent":["import { useEffect, useRef } from 'react'\nimport { Uppy as UppyCore } from '@uppy/core'\nimport type { Body, Meta } from '@uppy/utils/lib/UppyFile'\n\n/**\n * @deprecated Initialize Uppy outside of the component.\n */\nexport default function useUppy<M extends Meta, B extends Body>(\n  factory: () => UppyCore<M, B>,\n): UppyCore<M, B> | undefined {\n  if (typeof factory !== 'function') {\n    throw new TypeError(\n      'useUppy: expected a function that returns a new Uppy instance',\n    )\n  }\n\n  const uppy = useRef<UppyCore<M, B> | undefined>(undefined)\n  if (uppy.current === undefined) {\n    uppy.current = factory()\n\n    if (!(uppy.current instanceof UppyCore)) {\n      throw new TypeError(\n        `useUppy: factory function must return an Uppy instance, got ${typeof uppy.current}`,\n      )\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      uppy.current?.close({ reason: 'unmount' })\n      uppy.current = undefined\n    }\n  }, [uppy])\n\n  return uppy.current\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,IAAI,IAAIC,QAAQ,QAAQ,YAAY;AAG7C;AACA;AACA;AACA,eAAe,SAASC,OAAOA,CAC7BC,OAA6B,EACD;EAC5B,IAAI,OAAOA,OAAO,KAAK,UAAU,EAAE;IACjC,MAAM,IAAIC,SAAS,CACjB,+DACF,CAAC;EACH;EAEA,MAAMC,IAAI,GAAGN,MAAM,CAA6BO,SAAS,CAAC;EAC1D,IAAID,IAAI,CAACE,OAAO,KAAKD,SAAS,EAAE;IAC9BD,IAAI,CAACE,OAAO,GAAGJ,OAAO,CAAC,CAAC;IAExB,IAAI,EAAEE,IAAI,CAACE,OAAO,YAAYN,QAAQ,CAAC,EAAE;MACvC,MAAM,IAAIG,SAAS,CAChB,+DAA8D,OAAOC,IAAI,CAACE,OAAQ,EACrF,CAAC;IACH;EACF;EAEAT,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MAAA,IAAAU,aAAA;MACX,CAAAA,aAAA,GAAAH,IAAI,CAACE,OAAO,aAAZC,aAAA,CAAcC,KAAK,CAAC;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAC;MAC1CL,IAAI,CAACE,OAAO,GAAGD,SAAS;IAC1B,CAAC;EACH,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEV,OAAOA,IAAI,CAACE,OAAO;AACrB"}