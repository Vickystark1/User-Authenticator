{"version":3,"names":["createElement","h","Component","PropTypes","DashboardPlugin","locale","uppy","uppyPropType","plugins","metaFields","cssSize","getHTMLProps","nonHtmlPropsHaveChanged","Dashboard","componentDidMount","installPlugin","componentDidUpdate","prevProps","props","uninstallPlugin","options","target","container","plugin","setOptions","componentWillUnmount","id","inline","use","getPlugin","removePlugin","render","className","ref","propsTypes","disableInformer","bool","disableStatusBar","disableThumbnailGenerator","height","hideProgressAfterFinish","hideUploadButton","note","string","proudlyDisplayPoweredByUppy","showProgressDetails","width","thumbnailType","thumbnailWidth","number"],"sources":["Dashboard.ts"],"sourcesContent":["import { createElement as h, Component } from 'react'\nimport PropTypes from 'prop-types'\nimport type { UnknownPlugin, Uppy } from '@uppy/core'\nimport DashboardPlugin from '@uppy/dashboard'\nimport type { Body, Meta } from '@uppy/utils/lib/UppyFile'\nimport type { DashboardOptions } from '@uppy/dashboard'\nimport {\n  locale,\n  uppy as uppyPropType,\n  plugins,\n  metaFields,\n  cssSize,\n} from './propTypes.ts'\nimport getHTMLProps from './getHTMLProps.ts'\nimport nonHtmlPropsHaveChanged from './nonHtmlPropsHaveChanged.ts'\n\ntype DashboardInlineOptions<M extends Meta, B extends Body> = Omit<\n  DashboardOptions<M, B> & { inline: true },\n  'inline'\n> &\n  React.BaseHTMLAttributes<HTMLDivElement>\n\nexport interface DashboardProps<M extends Meta, B extends Body>\n  extends DashboardInlineOptions<M, B> {\n  uppy: Uppy<M, B>\n}\n\n/**\n * React Component that renders a Dashboard for an Uppy instance. This component\n * renders the Dashboard inline, so you can put it anywhere you want.\n */\n\nclass Dashboard<M extends Meta, B extends Body> extends Component<\n  DashboardProps<M, B>\n> {\n  static propsTypes = {\n    uppy: uppyPropType,\n    disableInformer: PropTypes.bool,\n    disableStatusBar: PropTypes.bool,\n    disableThumbnailGenerator: PropTypes.bool,\n    height: cssSize,\n    hideProgressAfterFinish: PropTypes.bool,\n    hideUploadButton: PropTypes.bool,\n    locale,\n    metaFields,\n    note: PropTypes.string,\n    plugins,\n    proudlyDisplayPoweredByUppy: PropTypes.bool,\n    showProgressDetails: PropTypes.bool,\n    width: cssSize,\n    // pass-through to ThumbnailGenerator\n    thumbnailType: PropTypes.string,\n    thumbnailWidth: PropTypes.number,\n  }\n\n  private container: HTMLElement\n\n  private plugin: UnknownPlugin<M, B>\n\n  componentDidMount(): void {\n    this.installPlugin()\n  }\n\n  componentDidUpdate(prevProps: Dashboard<M, B>['props']): void {\n    // eslint-disable-next-line react/destructuring-assignment\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps)\n      this.installPlugin()\n    } else if (nonHtmlPropsHaveChanged(this.props, prevProps)) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { uppy, ...options } = { ...this.props, target: this.container }\n      this.plugin.setOptions(options)\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.uninstallPlugin()\n  }\n\n  installPlugin(): void {\n    const { uppy, ...options } = {\n      id: 'react:Dashboard',\n      inline: true,\n      ...this.props,\n      target: this.container,\n    }\n    uppy.use(DashboardPlugin<M, B>, options)\n\n    this.plugin = uppy.getPlugin(options.id)!\n  }\n\n  uninstallPlugin(props = this.props): void {\n    const { uppy } = props\n\n    uppy.removePlugin(this.plugin)\n  }\n\n  render(): JSX.Element {\n    return h('div', {\n      className: 'uppy-Container',\n      ref: (container: HTMLElement): void => {\n        this.container = container\n      },\n      ...getHTMLProps(this.props),\n    })\n  }\n}\n\nexport default Dashboard\n"],"mappings":"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"}