{"version":3,"names":["BasePlugin","nanoid","EventManager","ProgressTimeout","RateLimitedQueue","internalRateLimitedQueue","NetworkError","isNetworkError","filterNonFailedFiles","filterFilesToEmitUploadStarted","packageJson","locale","buildResponseError","xhr","err","error","Error","Object","assign","data","request","setTypeInBlob","file","dataWithUpdatedType","slice","size","meta","type","defaultOptions","formData","fieldName","method","allowedMetaFields","responseUrlFieldName","bundle","headers","timeout","limit","withCredentials","responseType","getResponseData","responseText","parsedResponse","JSON","parse","getResponseError","_","response","validateStatus","status","_uploadLocalFile","_classPrivateFieldLooseKey","_uploadBundle","_getCompanionClientArgs","_uploadFiles","_handleUpload","XHRUpload","constructor","uppy","opts","defineProperty","value","_uploadFiles2","_getCompanionClientArgs2","_uploadBundle2","_uploadLocalFile2","writable","fileIDs","length","log","files","getFilesByIds","filesFiltered","filesToEmit","emit","isSomeFileRemote","some","isRemote","TypeError","_classPrivateFieldLooseBase","id","defaultLocale","i18nInit","requests","undefined","uploaderEvents","create","getOptions","overrides","getState","xhrUpload","addMetadata","Array","isArray","keys","forEach","item","subItem","append","createFormDataUpload","formPost","FormData","name","createBundledUpload","options","install","capabilities","setState","individualCancellation","addUploader","uninstall","removeUploader","current","total","uploadStarted","Date","now","Promise","resolve","reject","XMLHttpRequest","eventManager","queuedRequest","timer","i18n","seconds","Math","ceil","upload","addEventListener","ev","loaded","progress","lengthComputable","getFile","uploader","bytesUploaded","bytesTotal","done","remove","body","uploadURL","uploadResp","open","toUpperCase","endpoint","run","currentOpts","header","setRequestHeader","send","abort","onFileRemove","onCancelAll","_ref","reason","optsFromState","emitError","on","_temp","_file$remote","remote","protocol","fieldname","metadata","fromEntries","map","httpMethod","useFormData","allSettled","i","getQueue","controller","AbortController","removedHandler","removedFile","uploadPromise","getRequestClientForFile","uploadRemoteFile","signal","wrapSyncFunction","off","priority","VERSION","version"],"sources":["index.ts"],"sourcesContent":["import BasePlugin from '@uppy/core/lib/BasePlugin.js'\nimport type { DefinePluginOpts, PluginOpts } from '@uppy/core/lib/BasePlugin.js'\nimport type { RequestClient } from '@uppy/companion-client'\nimport { nanoid } from 'nanoid/non-secure'\nimport EventManager from '@uppy/core/lib/EventManager.js'\nimport ProgressTimeout from '@uppy/utils/lib/ProgressTimeout'\nimport {\n  RateLimitedQueue,\n  internalRateLimitedQueue,\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore untyped\n} from '@uppy/utils/lib/RateLimitedQueue'\nimport NetworkError from '@uppy/utils/lib/NetworkError'\nimport isNetworkError from '@uppy/utils/lib/isNetworkError'\nimport {\n  filterNonFailedFiles,\n  filterFilesToEmitUploadStarted,\n} from '@uppy/utils/lib/fileFilters'\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nimport type { Meta, Body, UppyFile } from '@uppy/utils/lib/UppyFile'\nimport type { State, Uppy } from '@uppy/core'\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nimport packageJson from '../package.json'\nimport locale from './locale.ts'\n\ndeclare module '@uppy/utils/lib/UppyFile' {\n  // eslint-disable-next-line no-shadow, @typescript-eslint/no-unused-vars\n  export interface UppyFile<M extends Meta, B extends Body> {\n    // TODO: figure out what else is in this type\n    xhrUpload?: { headers: Record<string, string> }\n  }\n}\n\ndeclare module '@uppy/core' {\n  // eslint-disable-next-line no-shadow, @typescript-eslint/no-unused-vars\n  export interface State<M extends Meta, B extends Body> {\n    // TODO: figure out what else is in this type\n    xhrUpload?: { headers: Record<string, string> }\n  }\n}\n\nexport interface XhrUploadOpts<M extends Meta, B extends Body>\n  extends PluginOpts {\n  endpoint: string\n  method?: 'post' | 'put'\n  formData?: boolean\n  fieldName?: string\n  headers?:\n    | Record<string, string>\n    | ((file: UppyFile<M, B>) => Record<string, string>)\n  timeout?: number\n  limit?: number\n  responseType?: XMLHttpRequestResponseType\n  withCredentials?: boolean\n  validateStatus?: (\n    status: number,\n    body: string,\n    xhr: XMLHttpRequest,\n  ) => boolean\n  getResponseData?: (body: string, xhr: XMLHttpRequest) => B\n  getResponseError?: (body: string, xhr: XMLHttpRequest) => Error | NetworkError\n  allowedMetaFields?: string[] | null\n  bundle?: boolean\n  responseUrlFieldName?: string\n}\n\nfunction buildResponseError(\n  xhr: XMLHttpRequest,\n  err?: string | Error | NetworkError,\n) {\n  let error = err\n  // No error message\n  if (!error) error = new Error('Upload error')\n  // Got an error message string\n  if (typeof error === 'string') error = new Error(error)\n  // Got something else\n  if (!(error instanceof Error)) {\n    error = Object.assign(new Error('Upload error'), { data: error })\n  }\n\n  if (isNetworkError(xhr)) {\n    error = new NetworkError(error, xhr)\n    return error\n  }\n\n  // @ts-expect-error request can only be set on NetworkError\n  // but we use NetworkError to distinguish between errors.\n  error.request = xhr\n  return error\n}\n\n/**\n * Set `data.type` in the blob to `file.meta.type`,\n * because we might have detected a more accurate file type in Uppy\n * https://stackoverflow.com/a/50875615\n */\nfunction setTypeInBlob<M extends Meta, B extends Body>(file: UppyFile<M, B>) {\n  const dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type)\n  return dataWithUpdatedType\n}\n\nconst defaultOptions = {\n  formData: true,\n  fieldName: 'file',\n  method: 'post',\n  allowedMetaFields: null,\n  responseUrlFieldName: 'url',\n  bundle: false,\n  headers: {},\n  timeout: 30 * 1000,\n  limit: 5,\n  withCredentials: false,\n  responseType: '',\n  getResponseData(responseText) {\n    let parsedResponse = {}\n    try {\n      parsedResponse = JSON.parse(responseText)\n    } catch {\n      // ignore\n    }\n    // We don't have access to the B (Body) generic here\n    // so we have to cast it to any. The user facing types\n    // remain correct, this is only to please the merging of default options.\n    return parsedResponse as any\n  },\n  getResponseError(_, response) {\n    let error = new Error('Upload error')\n\n    if (isNetworkError(response)) {\n      error = new NetworkError(error, response)\n    }\n\n    return error\n  },\n  validateStatus(status) {\n    return status >= 200 && status < 300\n  },\n} satisfies Partial<XhrUploadOpts<any, any>>\n\ntype Opts<M extends Meta, B extends Body> = DefinePluginOpts<\n  XhrUploadOpts<M, B>,\n  keyof typeof defaultOptions\n>\n\ninterface OptsWithHeaders<M extends Meta, B extends Body> extends Opts<M, B> {\n  headers: Record<string, string>\n}\n\nexport default class XHRUpload<\n  M extends Meta,\n  B extends Body,\n> extends BasePlugin<Opts<M, B>, M, B> {\n  // eslint-disable-next-line global-require\n  static VERSION = packageJson.version\n\n  requests: RateLimitedQueue\n\n  uploaderEvents: Record<string, EventManager<M, B> | null>\n\n  constructor(uppy: Uppy<M, B>, opts: XhrUploadOpts<M, B>) {\n    super(uppy, {\n      ...defaultOptions,\n      fieldName: opts.bundle ? 'files[]' : 'file',\n      ...opts,\n    })\n    this.type = 'uploader'\n    this.id = this.opts.id || 'XHRUpload'\n\n    this.defaultLocale = locale\n\n    this.i18nInit()\n\n    // Simultaneous upload limiting is shared across all uploads with this plugin.\n    if (internalRateLimitedQueue in this.opts) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore untyped internal\n      this.requests = this.opts[internalRateLimitedQueue]\n    } else {\n      this.requests = new RateLimitedQueue(this.opts.limit)\n    }\n\n    if (this.opts.bundle && !this.opts.formData) {\n      throw new Error(\n        '`opts.formData` must be true when `opts.bundle` is enabled.',\n      )\n    }\n\n    if (this.opts.bundle && typeof this.opts.headers === 'function') {\n      throw new Error(\n        '`opts.headers` can not be a function when the `bundle: true` option is set.',\n      )\n    }\n\n    if (opts?.allowedMetaFields === undefined && 'metaFields' in this.opts) {\n      throw new Error(\n        'The `metaFields` option has been renamed to `allowedMetaFields`.',\n      )\n    }\n\n    this.uploaderEvents = Object.create(null)\n  }\n\n  getOptions(file: UppyFile<M, B>): OptsWithHeaders<M, B> {\n    const overrides = this.uppy.getState().xhrUpload\n    const { headers } = this.opts\n\n    const opts = {\n      ...this.opts,\n      ...(overrides || {}),\n      ...(file.xhrUpload || {}),\n      headers: {},\n    }\n    // Support for `headers` as a function, only in the XHRUpload settings.\n    // Options set by other plugins in Uppy state or on the files themselves are still merged in afterward.\n    //\n    // ```js\n    // headers: (file) => ({ expires: file.meta.expires })\n    // ```\n    if (typeof headers === 'function') {\n      opts.headers = headers(file)\n    } else {\n      Object.assign(opts.headers, this.opts.headers)\n    }\n\n    if (overrides) {\n      Object.assign(opts.headers, overrides.headers)\n    }\n    if (file.xhrUpload) {\n      Object.assign(opts.headers, file.xhrUpload.headers)\n    }\n\n    return opts\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addMetadata(\n    formData: FormData,\n    meta: State<M, B>['meta'],\n    opts: Opts<M, B>,\n  ): void {\n    const allowedMetaFields =\n      Array.isArray(opts.allowedMetaFields) ?\n        opts.allowedMetaFields\n      : Object.keys(meta) // Send along all fields by default.\n\n    allowedMetaFields.forEach((item) => {\n      const value = meta[item]\n      if (Array.isArray(value)) {\n        // In this case we don't transform `item` to add brackets, it's up to\n        // the user to add the brackets so it won't be overridden.\n        value.forEach((subItem) => formData.append(item, subItem))\n      } else {\n        formData.append(item, value as string)\n      }\n    })\n  }\n\n  createFormDataUpload(file: UppyFile<M, B>, opts: Opts<M, B>): FormData {\n    const formPost = new FormData()\n\n    this.addMetadata(formPost, file.meta, opts)\n\n    const dataWithUpdatedType = setTypeInBlob(file)\n\n    if (file.name) {\n      formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name)\n    } else {\n      formPost.append(opts.fieldName, dataWithUpdatedType)\n    }\n\n    return formPost\n  }\n\n  createBundledUpload(files: UppyFile<M, B>[], opts: Opts<M, B>): FormData {\n    const formPost = new FormData()\n\n    const { meta } = this.uppy.getState()\n    this.addMetadata(formPost, meta, opts)\n\n    files.forEach((file) => {\n      const options = this.getOptions(file)\n\n      const dataWithUpdatedType = setTypeInBlob(file)\n\n      if (file.name) {\n        formPost.append(options.fieldName, dataWithUpdatedType, file.name)\n      } else {\n        formPost.append(options.fieldName, dataWithUpdatedType)\n      }\n    })\n\n    return formPost\n  }\n\n  async #uploadLocalFile(file: UppyFile<M, B>, current: number, total: number) {\n    const opts = this.getOptions(file)\n    const uploadStarted = Date.now()\n\n    this.uppy.log(`uploading ${current} of ${total}`)\n    return new Promise((resolve, reject) => {\n      const data =\n        opts.formData ? this.createFormDataUpload(file, opts) : file.data\n\n      const xhr = new XMLHttpRequest()\n      const eventManager = new EventManager(this.uppy)\n      this.uploaderEvents[file.id] = eventManager\n      let queuedRequest: { abort: () => void; done: () => void }\n\n      const timer = new ProgressTimeout(opts.timeout, () => {\n        const error = new Error(\n          this.i18n('uploadStalled', {\n            seconds: Math.ceil(opts.timeout / 1000),\n          }),\n        )\n        this.uppy.emit('upload-stalled', error, [file])\n      })\n\n      const id = nanoid()\n\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log(`[XHRUpload] ${id} started`)\n      })\n\n      xhr.upload.addEventListener('progress', (ev) => {\n        this.uppy.log(`[XHRUpload] ${id} progress: ${ev.loaded} / ${ev.total}`)\n        // Begin checking for timeouts when progress starts, instead of loading,\n        // to avoid timing out requests on browser concurrency queue\n        timer.progress()\n\n        if (ev.lengthComputable) {\n          this.uppy.emit('upload-progress', this.uppy.getFile(file.id), {\n            // TODO: do not send `uploader` in next major\n            // @ts-expect-error we can't type this and we should remove it\n            uploader: this,\n            uploadStarted,\n            bytesUploaded: ev.loaded,\n            bytesTotal: ev.total,\n          })\n        }\n      })\n\n      xhr.addEventListener('load', () => {\n        this.uppy.log(`[XHRUpload] ${id} finished`)\n        timer.done()\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id]!.remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        if (opts.validateStatus(xhr.status, xhr.responseText, xhr)) {\n          const body = opts.getResponseData(xhr.responseText, xhr)\n          const uploadURL = body?.[opts.responseUrlFieldName] as\n            | string\n            | undefined\n\n          const uploadResp = {\n            status: xhr.status,\n            body,\n            uploadURL,\n          }\n\n          this.uppy.emit(\n            'upload-success',\n            this.uppy.getFile(file.id),\n            uploadResp,\n          )\n\n          if (uploadURL) {\n            this.uppy.log(`Download ${file.name} from ${uploadURL}`)\n          }\n\n          return resolve(file)\n        }\n        const body = opts.getResponseData(xhr.responseText, xhr)\n        const error = buildResponseError(\n          xhr,\n          opts.getResponseError(xhr.responseText, xhr),\n        )\n\n        const response = {\n          status: xhr.status,\n          body,\n        }\n\n        this.uppy.emit('upload-error', file, error, response)\n        return reject(error)\n      })\n\n      xhr.addEventListener('error', () => {\n        this.uppy.log(`[XHRUpload] ${id} errored`)\n        timer.done()\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id]!.remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        const error = buildResponseError(\n          xhr,\n          opts.getResponseError(xhr.responseText, xhr),\n        )\n        this.uppy.emit('upload-error', file, error)\n        return reject(error)\n      })\n\n      xhr.open(opts.method.toUpperCase(), opts.endpoint, true)\n      // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n      xhr.withCredentials = opts.withCredentials\n      if (opts.responseType !== '') {\n        xhr.responseType = opts.responseType\n      }\n\n      queuedRequest = this.requests.run(() => {\n        // When using an authentication system like JWT, the bearer token goes as a header. This\n        // header needs to be fresh each time the token is refreshed so computing and setting the\n        // headers just before the upload starts enables this kind of authentication to work properly.\n        // Otherwise, half-way through the list of uploads the token could be stale and the upload would fail.\n        const currentOpts = this.getOptions(file)\n\n        Object.keys(currentOpts.headers).forEach((header) => {\n          xhr.setRequestHeader(header, currentOpts.headers[header])\n        })\n\n        xhr.send(data)\n\n        return () => {\n          timer.done()\n          xhr.abort()\n        }\n      })\n\n      eventManager.onFileRemove(file.id, () => {\n        queuedRequest.abort()\n        reject(new Error('File removed'))\n      })\n\n      eventManager.onCancelAll(file.id, ({ reason }) => {\n        if (reason === 'user') {\n          queuedRequest.abort()\n        }\n        reject(new Error('Upload cancelled'))\n      })\n    })\n  }\n\n  #uploadBundle(files: UppyFile<M, B>[]): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const { endpoint } = this.opts\n      const { method } = this.opts\n      const uploadStarted = Date.now()\n\n      const optsFromState = this.uppy.getState().xhrUpload\n      const formData = this.createBundledUpload(files, {\n        ...this.opts,\n        ...(optsFromState || {}),\n      })\n\n      const xhr = new XMLHttpRequest()\n\n      const emitError = (error: Error) => {\n        files.forEach((file) => {\n          this.uppy.emit('upload-error', file, error)\n        })\n      }\n\n      const timer = new ProgressTimeout(this.opts.timeout, () => {\n        const error = new Error(\n          this.i18n('uploadStalled', {\n            seconds: Math.ceil(this.opts.timeout / 1000),\n          }),\n        )\n        this.uppy.emit('upload-stalled', error, files)\n      })\n\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log('[XHRUpload] started uploading bundle')\n        timer.progress()\n      })\n\n      xhr.upload.addEventListener('progress', (ev) => {\n        timer.progress()\n\n        if (!ev.lengthComputable) return\n\n        files.forEach((file) => {\n          this.uppy.emit('upload-progress', this.uppy.getFile(file.id), {\n            // TODO: do not send `uploader` in next major\n            // @ts-expect-error we can't type this and we should remove it\n            uploader: this,\n            uploadStarted,\n            bytesUploaded: (ev.loaded / ev.total) * (file.size as number),\n            bytesTotal: file.size as number,\n          })\n        })\n      })\n\n      xhr.addEventListener('load', () => {\n        timer.done()\n\n        if (this.opts.validateStatus(xhr.status, xhr.responseText, xhr)) {\n          const body = this.opts.getResponseData(xhr.responseText, xhr)\n          const uploadResp = {\n            status: xhr.status,\n            body,\n          }\n          files.forEach((file) => {\n            this.uppy.emit(\n              'upload-success',\n              this.uppy.getFile(file.id),\n              uploadResp,\n            )\n          })\n          return resolve()\n        }\n\n        const error =\n          this.opts.getResponseError(xhr.responseText, xhr) ||\n          new NetworkError('Upload error', xhr)\n        emitError(error)\n        return reject(error)\n      })\n\n      xhr.addEventListener('error', () => {\n        timer.done()\n\n        const error =\n          this.opts.getResponseError(xhr.responseText, xhr) ||\n          new Error('Upload error')\n        emitError(error)\n        return reject(error)\n      })\n\n      this.uppy.on('cancel-all', ({ reason } = {}) => {\n        if (reason !== 'user') return\n        timer.done()\n        xhr.abort()\n      })\n\n      xhr.open(method.toUpperCase(), endpoint, true)\n      // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n      xhr.withCredentials = this.opts.withCredentials\n      if (this.opts.responseType !== '') {\n        xhr.responseType = this.opts.responseType\n      }\n\n      // In bundle mode headers can not be a function\n      const headers = this.opts.headers as Record<string, string>\n      Object.keys(headers).forEach((header) => {\n        xhr.setRequestHeader(header, headers[header] as string)\n      })\n\n      xhr.send(formData)\n    })\n  }\n\n  #getCompanionClientArgs(file: UppyFile<M, B>) {\n    const opts = this.getOptions(file)\n    const allowedMetaFields =\n      Array.isArray(opts.allowedMetaFields) ?\n        opts.allowedMetaFields\n        // Send along all fields by default.\n      : Object.keys(file.meta)\n    return {\n      ...file.remote?.body,\n      protocol: 'multipart',\n      endpoint: opts.endpoint,\n      size: file.data.size,\n      fieldname: opts.fieldName,\n      metadata: Object.fromEntries(\n        allowedMetaFields.map((name) => [name, file.meta[name]]),\n      ),\n      httpMethod: opts.method,\n      useFormData: opts.formData,\n      headers: opts.headers,\n    }\n  }\n\n  async #uploadFiles(files: UppyFile<M, B>[]) {\n    await Promise.allSettled(\n      files.map((file, i) => {\n        const current = i + 1\n        const total = files.length\n\n        if (file.isRemote) {\n          const getQueue = () => this.requests\n          const controller = new AbortController()\n\n          const removedHandler = (removedFile: UppyFile<M, B>) => {\n            if (removedFile.id === file.id) controller.abort()\n          }\n          this.uppy.on('file-removed', removedHandler)\n\n          const uploadPromise = this.uppy\n            .getRequestClientForFile<RequestClient<M, B>>(file)\n            .uploadRemoteFile(file, this.#getCompanionClientArgs(file), {\n              signal: controller.signal,\n              getQueue,\n            })\n\n          this.requests.wrapSyncFunction(\n            () => {\n              this.uppy.off('file-removed', removedHandler)\n            },\n            { priority: -1 },\n          )()\n\n          return uploadPromise\n        }\n\n        return this.#uploadLocalFile(file, current, total)\n      }),\n    )\n  }\n\n  #handleUpload = async (fileIDs: string[]) => {\n    if (fileIDs.length === 0) {\n      this.uppy.log('[XHRUpload] No files to upload!')\n      return\n    }\n\n    // No limit configured by the user, and no RateLimitedQueue passed in by a \"parent\" plugin\n    // (basically just AwsS3) using the internal symbol\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore untyped internal\n    if (this.opts.limit === 0 && !this.opts[internalRateLimitedQueue]) {\n      this.uppy.log(\n        '[XHRUpload] When uploading multiple files at once, consider setting the `limit` option (to `10` for example), to limit the number of concurrent uploads, which helps prevent memory and network issues: https://uppy.io/docs/xhr-upload/#limit-0',\n        'warning',\n      )\n    }\n\n    this.uppy.log('[XHRUpload] Uploading...')\n    const files = this.uppy.getFilesByIds(fileIDs)\n\n    const filesFiltered = filterNonFailedFiles(files)\n    const filesToEmit = filterFilesToEmitUploadStarted(filesFiltered)\n    this.uppy.emit('upload-start', filesToEmit)\n\n    if (this.opts.bundle) {\n      // if bundle: true, we don’t support remote uploads\n      const isSomeFileRemote = filesFiltered.some((file) => file.isRemote)\n      if (isSomeFileRemote) {\n        throw new Error(\n          'Can’t upload remote files when the `bundle: true` option is set',\n        )\n      }\n\n      if (typeof this.opts.headers === 'function') {\n        throw new TypeError(\n          '`headers` may not be a function when the `bundle: true` option is set',\n        )\n      }\n\n      await this.#uploadBundle(filesFiltered)\n    } else {\n      await this.#uploadFiles(filesFiltered)\n    }\n  }\n\n  install(): void {\n    if (this.opts.bundle) {\n      const { capabilities } = this.uppy.getState()\n      this.uppy.setState({\n        capabilities: {\n          ...capabilities,\n          individualCancellation: false,\n        },\n      })\n    }\n\n    this.uppy.addUploader(this.#handleUpload)\n  }\n\n  uninstall(): void {\n    if (this.opts.bundle) {\n      const { capabilities } = this.uppy.getState()\n      this.uppy.setState({\n        capabilities: {\n          ...capabilities,\n          individualCancellation: true,\n        },\n      })\n    }\n\n    this.uppy.removeUploader(this.#handleUpload)\n  }\n}\n"],"mappings":"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"}