[{"/home/nainar/Documents/reactProjects/userAuthenticator/src/index.js":"1","/home/nainar/Documents/reactProjects/userAuthenticator/src/App.js":"2","/home/nainar/Documents/reactProjects/userAuthenticator/src/pages/LoginPage.js":"3","/home/nainar/Documents/reactProjects/userAuthenticator/src/pages/RegisterPage.js":"4","/home/nainar/Documents/reactProjects/userAuthenticator/src/pages/Dashboard.js":"5","/home/nainar/Documents/reactProjects/userAuthenticator/src/services/Storage.js":"6","/home/nainar/Documents/reactProjects/userAuthenticator/src/services/Auth.js":"7","/home/nainar/Documents/reactProjects/userAuthenticator/src/components/NavBar.js":"8","/home/nainar/Documents/reactProjects/userAuthenticator/src/services/Api.js":"9"},{"size":235,"mtime":1712321019373,"results":"10","hashOfConfig":"11"},{"size":612,"mtime":1711536194940,"results":"12","hashOfConfig":"11"},{"size":4740,"mtime":1711969219321,"results":"13","hashOfConfig":"11"},{"size":5713,"mtime":1711967425495,"results":"14","hashOfConfig":"11"},{"size":1779,"mtime":1711538899081,"results":"15","hashOfConfig":"11"},{"size":240,"mtime":1711536194940,"results":"16","hashOfConfig":"11"},{"size":192,"mtime":1711536194940,"results":"17","hashOfConfig":"11"},{"size":6884,"mtime":1712907673486,"results":"18","hashOfConfig":"11"},{"size":805,"mtime":1711536194940,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1en6rnt",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/home/nainar/Documents/reactProjects/userAuthenticator/src/index.js",[],[],["51"],"/home/nainar/Documents/reactProjects/userAuthenticator/src/App.js",[],[],"/home/nainar/Documents/reactProjects/userAuthenticator/src/pages/LoginPage.js",["52","53","54"],[],"import './LoginPage.css';\n\nimport { useState } from 'react';\nimport { LoginApi } from '../services/Api';\nimport {storeUserData } from '../services/Storage'\nimport { isAuthenticated } from '../services/Auth';\nimport { Link, Navigate } from 'react-router-dom';\nimport NavBar from '../components/NavBar';\n\nexport default function LoginPage (){\n\n    const initialStateErrors = {\n        email:{required:false},\n        password:{required:false},\n        custom_error:null\n    };\n    const [errors,setErrors] = useState(initialStateErrors);\n    \n    const [loading,setLoading]  =  useState(false);\n\n    const [inputs,setInputs] = useState({\n        email:\"\",\n        password:\"\",\n    })\n    const handleInput = (event)=>{\n        setInputs({...inputs,[event.target.name]:event.target.value})\n    }\n\n    const handleSubmit = (event)=>{\n        event.preventDefault();\n        let errors =initialStateErrors; \n        let hasError = false; \n        \n        if (inputs.email == \"\") {\n            errors.email.required =true;\n            hasError=true;\n        }\n        if (inputs.password == \"\") {\n            errors.password.required =true;\n            hasError=true;\n        }\n       \n        if (!hasError) {\n            setLoading(true)\n            //sending login api request\n            LoginApi(inputs).then((response)=>{\n               storeUserData(response.data.idToken);\n            }).catch((err)=>{\n               if (err.code=\"ERR_BAD_REQUEST\") {\n                    setErrors({...errors,custom_error:\"Invalid Credentials.\"})\n               }\n\n            }).finally(()=>{\n                setLoading(false)\n            })\n        }\n        setErrors({...errors});\n\n    }\n\n    if (isAuthenticated()) {\n        //redirect user to dashboard\n        return <Navigate to=\"/dashboard\" />\n    }\n\n\n    return (\n        <div>\n            <NavBar/>\n            <section className=\"login-block\">\n                <div className=\"container\">\n                    <div className=\"row \">\n                        <div className=\"col login-sec\">\n                            <h2 className=\"text-center\">Login Now</h2>\n                            <form onSubmit={handleSubmit} className=\"login-form\" action=\"\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputEmail1\" className=\"text-uppercase\">Email</label>\n                                <input type=\"email\"  className=\"form-control\" onChange={handleInput} name=\"email\"  placeholder=\"email\"  />\n                                { errors.email.required?\n                                (<span className=\"text-danger\" >\n                                    Email is required.\n                                </span>):null\n                                }\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputPassword1\" className=\"text-uppercase\">Password</label>\n                                <input  className=\"form-control\" type=\"password\" onChange={handleInput}  name=\"password\" placeholder=\"password\" />\n                                { errors.password.required?\n                                (<span className=\"text-danger\" >\n                                    Password is required.\n                                </span>):null\n                                }\n                            </div>\n                            <div className=\"form-group\">\n                                {loading ?\n                                (<div  className=\"text-center\">\n                                    <div className=\"spinner-border text-primary \" role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </div>\n                                </div>):null\n                                }\n                                <span className=\"text-danger\" >\n                                { errors.custom_error?\n                                (<p>{errors.custom_error}</p>)\n                                :null\n                                }\n                                </span>\n                                <input  type=\"submit\" className=\"btn btn-login float-right\" disabled={loading}  value=\"Login\" />\n                            </div>\n                            <div className=\"clearfix\"></div>\n                            <div className=\"form-group\">\n                            Create new account ? Please <Link  to=\"/\">Register</Link>\n                            </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n","/home/nainar/Documents/reactProjects/userAuthenticator/src/pages/RegisterPage.js",["55","56","57","58"],[],"import { useState } from 'react'\nimport { RegisterApi } from '../services/Api';\nimport { isAuthenticated } from '../services/Auth';\nimport { storeUserData } from '../services/Storage';\nimport './RegisterPage.css'\nimport { Link, Navigate } from 'react-router-dom';\nimport NavBar from '../components/NavBar';\n\nexport default function RegisterPage(){\n    const initialStateErrors = {\n        email:{required:false},\n        password:{required:false},\n        name:{required:false},\n        custom_error:null\n    };\n    const [errors,setErrors] = useState(initialStateErrors);\n\n    const [loading,setLoading]  =  useState(false);\n\n    const handleSubmit = (event)=>{\n        event.preventDefault();\n        let errors =initialStateErrors; \n        let hasError = false; \n        if (inputs.name == \"\") {\n            errors.name.required =true;\n            hasError=true;\n        }\n        if (inputs.email == \"\") {\n            errors.email.required =true;\n            hasError=true;\n        }\n        if (inputs.password == \"\") {\n            errors.password.required =true;\n            hasError=true;\n        }\n\n        if (!hasError) {\n            setLoading(true)\n            //sending register api request\n            RegisterApi(inputs).then((response)=>{\n               storeUserData(response.data.idToken);\n            }).catch((err)=>{\n               if(err.response.data.error.message==\"EMAIL_EXISTS\"){\n                    setErrors({...errors,custom_error:\"Already this email has been registered!\"})\n               }else if(String(err.response.data.error.message).includes('WEAK_PASSWORD')){\n                    setErrors({...errors,custom_error:\"Password should be at least 6 characters!\"})\n               }\n\n            }).finally(()=>{\n                setLoading(false)\n            })\n        }\n        console.log(initialStateErrors,errors);\n        setErrors(errors);\n    }\n\n    const [inputs,setInputs] = useState({\n        email:\"\",\n        password:\"\",\n        name:\"\"\n    })\n\n    const handleInput = (event)=>{\n        setInputs({...inputs,[event.target.name]:event.target.value})\n    }\n\n    if (isAuthenticated()) {\n        //redirect user to dashboard\n        return <Navigate to=\"/dashboard\" />\n    }\n    \n    return (\n        <div>\n            <NavBar/>\n            <section className=\"register-block\">\n                <div className=\"container\">\n                <div className=\"row \">\n                    <div className=\"col register-sec\">\n                        <h2 className=\"text-center\">Register Now</h2>\n                        <form onSubmit={handleSubmit} className=\"register-form\" action=\"\" >\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputEmail1\" className=\"text-uppercase\" >Name</label>\n            \n                            <input type=\"text\" className=\"form-control\" onChange={handleInput} name=\"name\"   placeholder=\"name\" />\n                        { errors.name.required?\n                            (<span className=\"text-danger\" >\n                                    Name is required.\n                                </span>):null\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputEmail1\"  className=\"text-uppercase\">Email</label>\n            \n                            <input type=\"email\"  className=\"form-control\" onChange={handleInput} name=\"email\"  placeholder=\"email\" />\n                            { errors.email.required?\n                            (<span className=\"text-danger\" >\n                                Email is required.\n                            </span>):null\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputPassword1\" className=\"text-uppercase\">Password</label>\n                            <input  className=\"form-control\" type=\"password\" onChange={handleInput}  name=\"password\"  placeholder=\"password\" />\n                            { errors.password.required?\n                            (<span className=\"text-danger\" >\n                                Password is required.\n                            </span>):null\n                            }\n                        </div>\n                        <div className=\"form-group\">\n            \n                            <span className=\"text-danger\" >\n                            { errors.custom_error?\n                            (<p>{errors.custom_error}</p>)\n                            :null\n                            }\n                            </span>\n                            {loading ?\n                            (<div  className=\"text-center\">\n                                <div className=\"spinner-border text-primary \" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>):null\n                            }\n            \n                            <input type=\"submit\" className=\"btn btn-login float-right\" disabled={loading}  value=\"Register\" />\n                        </div>\n                        <div className=\"clearfix\"></div>\n                        <div className=\"form-group\">\n                        Already have account ? Please <Link to=\"/login\">Login</Link>\n                        </div>\n            \n            \n                        </form>\n            \n            \n                    </div>\n            \n                </div>\n            \n            \n                </div>\n            </section>    \n        </div>\n        )\n}","/home/nainar/Documents/reactProjects/userAuthenticator/src/pages/Dashboard.js",["59","60","61"],[],"import { useEffect, useState } from \"react\"\nimport { useNavigate, Navigate } from \"react-router-dom\"\nimport NavBar from \"../components/NavBar\"\nimport { UserDetailsApi } from \"../services/Api\"\nimport { logout,isAuthenticated } from \"../services/Auth\"\nimport React from \"react\";\nimport BannerImage from \"../Assets/home-banner-image.jpg\";\nimport { FiArrowRight } from \"react-icons/fi\";\nimport tick from \"../Assets/tick.gif\";\n\nexport default function DashboardPage(){\n    const navigate = useNavigate();\n\n    const [user,setUser] = useState({name:\"\",email:\"\",localId:\"\"})\n\n    useEffect(()=>{\n        if(isAuthenticated()){\n            UserDetailsApi().then((response)=>{\n               \n                setUser({\n                    name:response.data.users[0].displayName,\n                    email:response.data.users[0].email,\n                    localId:response.data.users[0].localId,\n                })\n            })\n        }\n    },[])\n\n    const logoutUser = ()=>{\n        logout();\n        navigate('/login')\n    }\n\n    if (!isAuthenticated()) {\n        //redirect user to dashboard\n        return <Navigate to=\"/login\" />\n    }\n\n    return (\n        <div className=\"home-container text-center\">\n      <NavBar logoutUser={logoutUser}  />\n      <div className='d-flex justify-content-center align-items-center' style={{position:\"relative\",top:\"30vh\",alignItems:\"center\"}} >\n      <div style={{display:\"flex\",position:\"relative\",height:\"15vh\",padding:\"20px 20px\",border:\"1px dashed gray\",alignItems:\"center\",justifyContent:\"center\"}}>\n      <img src={tick} alt =\"\" style={{height:80,Width:80,position:'absolute',top:-40,borderRadius:\"50px 50px\"}}/>\n      <h2 style={{position:\"relative\",top:\"3vh\"}}>Successfully Logedin!..</h2>\n\n\n      </div>\n      </div>\n    </div>\n    )\n}","/home/nainar/Documents/reactProjects/userAuthenticator/src/services/Storage.js",[],[],"/home/nainar/Documents/reactProjects/userAuthenticator/src/services/Auth.js",[],[],"/home/nainar/Documents/reactProjects/userAuthenticator/src/components/NavBar.js",["62","63","64","65"],[],"/home/nainar/Documents/reactProjects/userAuthenticator/src/services/Api.js",[],[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":34,"column":26,"nodeType":"70","messageId":"71","endLine":34,"endColumn":28},{"ruleId":"68","severity":1,"message":"69","line":38,"column":29,"nodeType":"70","messageId":"71","endLine":38,"endColumn":31},{"ruleId":"72","severity":1,"message":"73","line":49,"column":20,"nodeType":"74","messageId":"75","endLine":49,"endColumn":46},{"ruleId":"68","severity":1,"message":"69","line":24,"column":25,"nodeType":"70","messageId":"71","endLine":24,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":28,"column":26,"nodeType":"70","messageId":"71","endLine":28,"endColumn":28},{"ruleId":"68","severity":1,"message":"69","line":32,"column":29,"nodeType":"70","messageId":"71","endLine":32,"endColumn":31},{"ruleId":"68","severity":1,"message":"69","line":43,"column":50,"nodeType":"70","messageId":"71","endLine":43,"endColumn":52},{"ruleId":"76","severity":1,"message":"77","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":19},{"ruleId":"76","severity":1,"message":"80","line":8,"column":10,"nodeType":"78","messageId":"79","endLine":8,"endColumn":22},{"ruleId":"76","severity":1,"message":"81","line":14,"column":12,"nodeType":"78","messageId":"79","endLine":14,"endColumn":16},{"ruleId":"76","severity":1,"message":"82","line":25,"column":7,"nodeType":"78","messageId":"79","endLine":25,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":40,"column":9,"nodeType":"85","endLine":40,"endColumn":80},{"ruleId":"83","severity":1,"message":"86","line":65,"column":31,"nodeType":"85","endLine":65,"endColumn":111},{"ruleId":"83","severity":1,"message":"86","line":133,"column":15,"nodeType":"85","endLine":133,"endColumn":111},"no-new-object",["87"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-unused-vars","'BannerImage' is defined but never used.","Identifier","unusedVar","'FiArrowRight' is defined but never used.","'user' is assigned a value but never used.","'navItems' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-object-constructor"]