{"ast":null,"code":"import { createElement as h, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DragDropPlugin from '@uppy/drag-drop';\nimport * as propTypes from \"./propTypes.js\";\nimport getHTMLProps from \"./getHTMLProps.js\";\nimport nonHtmlPropsHaveChanged from \"./nonHtmlPropsHaveChanged.js\";\n/**\n * React component that renders an area in which files can be dropped to be\n * uploaded.\n */\n\nclass DragDrop extends Component {\n  componentDidMount() {\n    this.installPlugin();\n  }\n  componentDidUpdate(prevProps) {\n    // eslint-disable-next-line react/destructuring-assignment\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps);\n      this.installPlugin();\n    } else if (nonHtmlPropsHaveChanged(this.props, prevProps)) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {\n        uppy,\n        ...options\n      } = {\n        ...this.props,\n        target: this.container\n      };\n      this.plugin.setOptions(options);\n    }\n  }\n  componentWillUnmount() {\n    this.uninstallPlugin();\n  }\n  installPlugin() {\n    const {\n      uppy,\n      locale,\n      inputName,\n      width,\n      height,\n      note\n    } = this.props;\n    const options = {\n      id: 'react:DragDrop',\n      locale,\n      inputName,\n      width,\n      height,\n      note,\n      target: this.container\n    };\n    uppy.use(DragDropPlugin, options);\n    this.plugin = uppy.getPlugin(options.id);\n  }\n  uninstallPlugin(props) {\n    if (props === void 0) {\n      props = this.props;\n    }\n    const {\n      uppy\n    } = props;\n    uppy.removePlugin(this.plugin);\n  }\n  render() {\n    return h('div', {\n      className: 'uppy-Container',\n      ref: container => {\n        this.container = container;\n      },\n      ...getHTMLProps(this.props)\n    });\n  }\n}\nDragDrop.propTypes = {\n  uppy: propTypes.uppy.isRequired,\n  locale: propTypes.locale,\n  inputName: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  note: PropTypes.string\n};\n// Must be kept in sync with @uppy/drag-drop/src/DragDrop.jsx.\nDragDrop.defaultProps = {\n  locale: null,\n  inputName: 'files[]',\n  width: '100%',\n  height: '100%',\n  note: null\n};\nexport default DragDrop;","map":{"version":3,"names":["createElement","h","Component","PropTypes","DragDropPlugin","propTypes","getHTMLProps","nonHtmlPropsHaveChanged","DragDrop","componentDidMount","installPlugin","componentDidUpdate","prevProps","uppy","props","uninstallPlugin","options","target","container","plugin","setOptions","componentWillUnmount","locale","inputName","width","height","note","id","use","getPlugin","removePlugin","render","className","ref","isRequired","string","defaultProps"],"sources":["/home/nainar/Documents/reactProjects/userAuthentiCator/registeration-login/node_modules/@uppy/react/lib/DragDrop.js"],"sourcesContent":["import { createElement as h, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DragDropPlugin from '@uppy/drag-drop';\nimport * as propTypes from \"./propTypes.js\";\nimport getHTMLProps from \"./getHTMLProps.js\";\nimport nonHtmlPropsHaveChanged from \"./nonHtmlPropsHaveChanged.js\";\n/**\n * React component that renders an area in which files can be dropped to be\n * uploaded.\n */\n\nclass DragDrop extends Component {\n  componentDidMount() {\n    this.installPlugin();\n  }\n  componentDidUpdate(prevProps) {\n    // eslint-disable-next-line react/destructuring-assignment\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps);\n      this.installPlugin();\n    } else if (nonHtmlPropsHaveChanged(this.props, prevProps)) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {\n        uppy,\n        ...options\n      } = {\n        ...this.props,\n        target: this.container\n      };\n      this.plugin.setOptions(options);\n    }\n  }\n  componentWillUnmount() {\n    this.uninstallPlugin();\n  }\n  installPlugin() {\n    const {\n      uppy,\n      locale,\n      inputName,\n      width,\n      height,\n      note\n    } = this.props;\n    const options = {\n      id: 'react:DragDrop',\n      locale,\n      inputName,\n      width,\n      height,\n      note,\n      target: this.container\n    };\n    uppy.use(DragDropPlugin, options);\n    this.plugin = uppy.getPlugin(options.id);\n  }\n  uninstallPlugin(props) {\n    if (props === void 0) {\n      props = this.props;\n    }\n    const {\n      uppy\n    } = props;\n    uppy.removePlugin(this.plugin);\n  }\n  render() {\n    return h('div', {\n      className: 'uppy-Container',\n      ref: container => {\n        this.container = container;\n      },\n      ...getHTMLProps(this.props)\n    });\n  }\n}\nDragDrop.propTypes = {\n  uppy: propTypes.uppy.isRequired,\n  locale: propTypes.locale,\n  inputName: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  note: PropTypes.string\n};\n// Must be kept in sync with @uppy/drag-drop/src/DragDrop.jsx.\nDragDrop.defaultProps = {\n  locale: null,\n  inputName: 'files[]',\n  width: '100%',\n  height: '100%',\n  note: null\n};\nexport default DragDrop;"],"mappings":"AAAA,SAASA,aAAa,IAAIC,CAAC,EAAEC,SAAS,QAAQ,OAAO;AACrD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,iBAAiB;AAC5C,OAAO,KAAKC,SAAS,MAAM,gBAAgB;AAC3C,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,uBAAuB,MAAM,8BAA8B;AAClE;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,SAASN,SAAS,CAAC;EAC/BO,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB;EACAC,kBAAkBA,CAACC,SAAS,EAAE;IAC5B;IACA,IAAIA,SAAS,CAACC,IAAI,KAAK,IAAI,CAACC,KAAK,CAACD,IAAI,EAAE;MACtC,IAAI,CAACE,eAAe,CAACH,SAAS,CAAC;MAC/B,IAAI,CAACF,aAAa,CAAC,CAAC;IACtB,CAAC,MAAM,IAAIH,uBAAuB,CAAC,IAAI,CAACO,KAAK,EAAEF,SAAS,CAAC,EAAE;MACzD;MACA,MAAM;QACJC,IAAI;QACJ,GAAGG;MACL,CAAC,GAAG;QACF,GAAG,IAAI,CAACF,KAAK;QACbG,MAAM,EAAE,IAAI,CAACC;MACf,CAAC;MACD,IAAI,CAACC,MAAM,CAACC,UAAU,CAACJ,OAAO,CAAC;IACjC;EACF;EACAK,oBAAoBA,CAAA,EAAG;IACrB,IAAI,CAACN,eAAe,CAAC,CAAC;EACxB;EACAL,aAAaA,CAAA,EAAG;IACd,MAAM;MACJG,IAAI;MACJS,MAAM;MACNC,SAAS;MACTC,KAAK;MACLC,MAAM;MACNC;IACF,CAAC,GAAG,IAAI,CAACZ,KAAK;IACd,MAAME,OAAO,GAAG;MACdW,EAAE,EAAE,gBAAgB;MACpBL,MAAM;MACNC,SAAS;MACTC,KAAK;MACLC,MAAM;MACNC,IAAI;MACJT,MAAM,EAAE,IAAI,CAACC;IACf,CAAC;IACDL,IAAI,CAACe,GAAG,CAACxB,cAAc,EAAEY,OAAO,CAAC;IACjC,IAAI,CAACG,MAAM,GAAGN,IAAI,CAACgB,SAAS,CAACb,OAAO,CAACW,EAAE,CAAC;EAC1C;EACAZ,eAAeA,CAACD,KAAK,EAAE;IACrB,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;MACpBA,KAAK,GAAG,IAAI,CAACA,KAAK;IACpB;IACA,MAAM;MACJD;IACF,CAAC,GAAGC,KAAK;IACTD,IAAI,CAACiB,YAAY,CAAC,IAAI,CAACX,MAAM,CAAC;EAChC;EACAY,MAAMA,CAAA,EAAG;IACP,OAAO9B,CAAC,CAAC,KAAK,EAAE;MACd+B,SAAS,EAAE,gBAAgB;MAC3BC,GAAG,EAAEf,SAAS,IAAI;QAChB,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC5B,CAAC;MACD,GAAGZ,YAAY,CAAC,IAAI,CAACQ,KAAK;IAC5B,CAAC,CAAC;EACJ;AACF;AACAN,QAAQ,CAACH,SAAS,GAAG;EACnBQ,IAAI,EAAER,SAAS,CAACQ,IAAI,CAACqB,UAAU;EAC/BZ,MAAM,EAAEjB,SAAS,CAACiB,MAAM;EACxBC,SAAS,EAAEpB,SAAS,CAACgC,MAAM;EAC3BX,KAAK,EAAErB,SAAS,CAACgC,MAAM;EACvBV,MAAM,EAAEtB,SAAS,CAACgC,MAAM;EACxBT,IAAI,EAAEvB,SAAS,CAACgC;AAClB,CAAC;AACD;AACA3B,QAAQ,CAAC4B,YAAY,GAAG;EACtBd,MAAM,EAAE,IAAI;EACZC,SAAS,EAAE,SAAS;EACpBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAE;AACR,CAAC;AACD,eAAelB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}