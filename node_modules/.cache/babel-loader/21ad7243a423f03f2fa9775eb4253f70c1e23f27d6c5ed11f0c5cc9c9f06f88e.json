{"ast":null,"code":"import { createElement as h, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DashboardPlugin from '@uppy/dashboard';\nimport { locale, uppy as uppyPropType, plugins, metaFields, cssSize } from \"./propTypes.js\";\nimport getHTMLProps from \"./getHTMLProps.js\";\nimport nonHtmlPropsHaveChanged from \"./nonHtmlPropsHaveChanged.js\";\n/**\n * React Component that renders a Dashboard for an Uppy instance. This component\n * renders the Dashboard inline, so you can put it anywhere you want.\n */\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.installPlugin();\n  }\n  componentDidUpdate(prevProps) {\n    // eslint-disable-next-line react/destructuring-assignment\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps);\n      this.installPlugin();\n    } else if (nonHtmlPropsHaveChanged(this.props, prevProps)) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {\n        uppy,\n        ...options\n      } = {\n        ...this.props,\n        target: this.container\n      };\n      this.plugin.setOptions(options);\n    }\n  }\n  componentWillUnmount() {\n    this.uninstallPlugin();\n  }\n  installPlugin() {\n    const {\n      uppy,\n      ...options\n    } = {\n      id: 'react:Dashboard',\n      inline: true,\n      ...this.props,\n      target: this.container\n    };\n    uppy.use(DashboardPlugin, options);\n    this.plugin = uppy.getPlugin(options.id);\n  }\n  uninstallPlugin(props) {\n    if (props === void 0) {\n      props = this.props;\n    }\n    const {\n      uppy\n    } = props;\n    uppy.removePlugin(this.plugin);\n  }\n  render() {\n    return h('div', {\n      className: 'uppy-Container',\n      ref: container => {\n        this.container = container;\n      },\n      ...getHTMLProps(this.props)\n    });\n  }\n}\nDashboard.propsTypes = {\n  uppy: uppyPropType,\n  disableInformer: PropTypes.bool,\n  disableStatusBar: PropTypes.bool,\n  disableThumbnailGenerator: PropTypes.bool,\n  height: cssSize,\n  hideProgressAfterFinish: PropTypes.bool,\n  hideUploadButton: PropTypes.bool,\n  locale,\n  metaFields,\n  note: PropTypes.string,\n  plugins,\n  proudlyDisplayPoweredByUppy: PropTypes.bool,\n  showProgressDetails: PropTypes.bool,\n  width: cssSize,\n  // pass-through to ThumbnailGenerator\n  thumbnailType: PropTypes.string,\n  thumbnailWidth: PropTypes.number\n};\nexport default Dashboard;","map":{"version":3,"names":["createElement","h","Component","PropTypes","DashboardPlugin","locale","uppy","uppyPropType","plugins","metaFields","cssSize","getHTMLProps","nonHtmlPropsHaveChanged","Dashboard","componentDidMount","installPlugin","componentDidUpdate","prevProps","props","uninstallPlugin","options","target","container","plugin","setOptions","componentWillUnmount","id","inline","use","getPlugin","removePlugin","render","className","ref","propsTypes","disableInformer","bool","disableStatusBar","disableThumbnailGenerator","height","hideProgressAfterFinish","hideUploadButton","note","string","proudlyDisplayPoweredByUppy","showProgressDetails","width","thumbnailType","thumbnailWidth","number"],"sources":["/home/nainar/Documents/reactProjects/userAuthentiCator/registeration-login/node_modules/@uppy/react/lib/Dashboard.js"],"sourcesContent":["import { createElement as h, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DashboardPlugin from '@uppy/dashboard';\nimport { locale, uppy as uppyPropType, plugins, metaFields, cssSize } from \"./propTypes.js\";\nimport getHTMLProps from \"./getHTMLProps.js\";\nimport nonHtmlPropsHaveChanged from \"./nonHtmlPropsHaveChanged.js\";\n/**\n * React Component that renders a Dashboard for an Uppy instance. This component\n * renders the Dashboard inline, so you can put it anywhere you want.\n */\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.installPlugin();\n  }\n  componentDidUpdate(prevProps) {\n    // eslint-disable-next-line react/destructuring-assignment\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps);\n      this.installPlugin();\n    } else if (nonHtmlPropsHaveChanged(this.props, prevProps)) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {\n        uppy,\n        ...options\n      } = {\n        ...this.props,\n        target: this.container\n      };\n      this.plugin.setOptions(options);\n    }\n  }\n  componentWillUnmount() {\n    this.uninstallPlugin();\n  }\n  installPlugin() {\n    const {\n      uppy,\n      ...options\n    } = {\n      id: 'react:Dashboard',\n      inline: true,\n      ...this.props,\n      target: this.container\n    };\n    uppy.use(DashboardPlugin, options);\n    this.plugin = uppy.getPlugin(options.id);\n  }\n  uninstallPlugin(props) {\n    if (props === void 0) {\n      props = this.props;\n    }\n    const {\n      uppy\n    } = props;\n    uppy.removePlugin(this.plugin);\n  }\n  render() {\n    return h('div', {\n      className: 'uppy-Container',\n      ref: container => {\n        this.container = container;\n      },\n      ...getHTMLProps(this.props)\n    });\n  }\n}\nDashboard.propsTypes = {\n  uppy: uppyPropType,\n  disableInformer: PropTypes.bool,\n  disableStatusBar: PropTypes.bool,\n  disableThumbnailGenerator: PropTypes.bool,\n  height: cssSize,\n  hideProgressAfterFinish: PropTypes.bool,\n  hideUploadButton: PropTypes.bool,\n  locale,\n  metaFields,\n  note: PropTypes.string,\n  plugins,\n  proudlyDisplayPoweredByUppy: PropTypes.bool,\n  showProgressDetails: PropTypes.bool,\n  width: cssSize,\n  // pass-through to ThumbnailGenerator\n  thumbnailType: PropTypes.string,\n  thumbnailWidth: PropTypes.number\n};\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}