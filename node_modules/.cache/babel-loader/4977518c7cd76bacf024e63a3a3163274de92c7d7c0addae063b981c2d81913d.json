{"ast":null,"code":"import { h } from 'preact';\nimport { useMemo } from 'preact/hooks';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore untyped\nimport VirtualList from '@uppy/utils/lib/VirtualList';\nimport FileItem from \"./FileItem/index.js\";\nfunction chunks(list, size) {\n  const chunked = [];\n  let currentChunk = [];\n  list.forEach(item => {\n    if (currentChunk.length < size) {\n      currentChunk.push(item);\n    } else {\n      chunked.push(currentChunk);\n      currentChunk = [item];\n    }\n  });\n  if (currentChunk.length) chunked.push(currentChunk);\n  return chunked;\n}\nexport default function FileList(_ref) {\n  let {\n    id,\n    error,\n    i18n,\n    uppy,\n    files,\n    acquirers,\n    resumableUploads,\n    hideRetryButton,\n    hidePauseResumeButton,\n    hideCancelButton,\n    showLinkToFileUploadResult,\n    showRemoveButtonAfterComplete,\n    isWide,\n    metaFields,\n    isSingleFile,\n    toggleFileCard,\n    handleRequestThumbnail,\n    handleCancelThumbnail,\n    recoveredState,\n    individualCancellation,\n    itemsPerRow,\n    openFileEditor,\n    canEditFile,\n    toggleAddFilesPanel,\n    containerWidth,\n    containerHeight\n  } = _ref;\n  // It's not great that this is hardcoded!\n  // It's ESPECIALLY not great that this is checking against `itemsPerRow`!\n  const rowHeight = itemsPerRow === 1 ?\n  // Mobile\n  71\n  // 190px height + 2 * 5px margin\n  : 200;\n\n  // Sort files by file.isGhost, ghost files first, only if recoveredState is present\n  const rows = useMemo(() => {\n    const sortByGhostComesFirst = (file1, file2) => files[file2].isGhost - files[file1].isGhost;\n    const fileIds = Object.keys(files);\n    if (recoveredState) fileIds.sort(sortByGhostComesFirst);\n    return chunks(fileIds, itemsPerRow);\n  }, [files, itemsPerRow, recoveredState]);\n  const renderRow = (row // The `role=\"presentation` attribute ensures that the list items are properly\n  ) =>\n  // associated with the `VirtualList` element.\n  // We use the first file ID as the key—this should not change across scroll rerenders\n  h(\"div\", {\n    class: \"uppy-Dashboard-filesInner\",\n    role: \"presentation\",\n    key: row[0]\n  }, row.map(fileID => h(FileItem, {\n    key: fileID\n    // @ts-expect-error it's fine\n    ,\n\n    uppy: uppy\n    // FIXME This is confusing, it's actually the Dashboard's plugin ID\n    ,\n\n    id: id,\n    error: error\n    // TODO move this to context\n    ,\n\n    i18n: i18n\n    // features\n    ,\n\n    acquirers: acquirers,\n    resumableUploads: resumableUploads,\n    individualCancellation: individualCancellation\n    // visual options\n    ,\n\n    hideRetryButton: hideRetryButton,\n    hidePauseResumeButton: hidePauseResumeButton,\n    hideCancelButton: hideCancelButton,\n    showLinkToFileUploadResult: showLinkToFileUploadResult,\n    showRemoveButtonAfterComplete: showRemoveButtonAfterComplete,\n    isWide: isWide,\n    metaFields: metaFields,\n    recoveredState: recoveredState,\n    isSingleFile: isSingleFile,\n    containerWidth: containerWidth,\n    containerHeight: containerHeight\n    // callbacks\n    ,\n\n    toggleFileCard: toggleFileCard,\n    handleRequestThumbnail: handleRequestThumbnail,\n    handleCancelThumbnail: handleCancelThumbnail,\n    role: \"listitem\",\n    openFileEditor: openFileEditor,\n    canEditFile: canEditFile,\n    toggleAddFilesPanel: toggleAddFilesPanel,\n    file: files[fileID]\n  })));\n  if (isSingleFile) {\n    return h(\"div\", {\n      class: \"uppy-Dashboard-files\"\n    }, renderRow(rows[0]));\n  }\n  return h(VirtualList, {\n    class: \"uppy-Dashboard-files\",\n    role: \"list\",\n    data: rows,\n    renderRow: renderRow,\n    rowHeight: rowHeight\n  });\n}","map":{"version":3,"names":["h","useMemo","VirtualList","FileItem","chunks","list","size","chunked","currentChunk","forEach","item","length","push","FileList","_ref","id","error","i18n","uppy","files","acquirers","resumableUploads","hideRetryButton","hidePauseResumeButton","hideCancelButton","showLinkToFileUploadResult","showRemoveButtonAfterComplete","isWide","metaFields","isSingleFile","toggleFileCard","handleRequestThumbnail","handleCancelThumbnail","recoveredState","individualCancellation","itemsPerRow","openFileEditor","canEditFile","toggleAddFilesPanel","containerWidth","containerHeight","rowHeight","rows","sortByGhostComesFirst","file1","file2","isGhost","fileIds","Object","keys","sort","renderRow","row","class","role","key","map","fileID","file","data"],"sources":["/home/nainar/Documents/reactProjects/userAuthentiCator/registeration-login/node_modules/@uppy/dashboard/lib/components/FileList.js"],"sourcesContent":["import { h } from 'preact';\nimport { useMemo } from 'preact/hooks';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore untyped\nimport VirtualList from '@uppy/utils/lib/VirtualList';\nimport FileItem from \"./FileItem/index.js\";\nfunction chunks(list, size) {\n  const chunked = [];\n  let currentChunk = [];\n  list.forEach(item => {\n    if (currentChunk.length < size) {\n      currentChunk.push(item);\n    } else {\n      chunked.push(currentChunk);\n      currentChunk = [item];\n    }\n  });\n  if (currentChunk.length) chunked.push(currentChunk);\n  return chunked;\n}\nexport default function FileList(_ref) {\n  let {\n    id,\n    error,\n    i18n,\n    uppy,\n    files,\n    acquirers,\n    resumableUploads,\n    hideRetryButton,\n    hidePauseResumeButton,\n    hideCancelButton,\n    showLinkToFileUploadResult,\n    showRemoveButtonAfterComplete,\n    isWide,\n    metaFields,\n    isSingleFile,\n    toggleFileCard,\n    handleRequestThumbnail,\n    handleCancelThumbnail,\n    recoveredState,\n    individualCancellation,\n    itemsPerRow,\n    openFileEditor,\n    canEditFile,\n    toggleAddFilesPanel,\n    containerWidth,\n    containerHeight\n  } = _ref;\n  // It's not great that this is hardcoded!\n  // It's ESPECIALLY not great that this is checking against `itemsPerRow`!\n  const rowHeight = itemsPerRow === 1 ?\n  // Mobile\n  71\n  // 190px height + 2 * 5px margin\n  : 200;\n\n  // Sort files by file.isGhost, ghost files first, only if recoveredState is present\n  const rows = useMemo(() => {\n    const sortByGhostComesFirst = (file1, file2) => files[file2].isGhost - files[file1].isGhost;\n    const fileIds = Object.keys(files);\n    if (recoveredState) fileIds.sort(sortByGhostComesFirst);\n    return chunks(fileIds, itemsPerRow);\n  }, [files, itemsPerRow, recoveredState]);\n  const renderRow = (row // The `role=\"presentation` attribute ensures that the list items are properly\n  ) =>\n  // associated with the `VirtualList` element.\n  // We use the first file ID as the key—this should not change across scroll rerenders\n  h(\"div\", {\n    class: \"uppy-Dashboard-filesInner\",\n    role: \"presentation\",\n    key: row[0]\n  }, row.map(fileID => h(FileItem, {\n    key: fileID\n    // @ts-expect-error it's fine\n    ,\n    uppy: uppy\n    // FIXME This is confusing, it's actually the Dashboard's plugin ID\n    ,\n    id: id,\n    error: error\n    // TODO move this to context\n    ,\n    i18n: i18n\n    // features\n    ,\n    acquirers: acquirers,\n    resumableUploads: resumableUploads,\n    individualCancellation: individualCancellation\n    // visual options\n    ,\n    hideRetryButton: hideRetryButton,\n    hidePauseResumeButton: hidePauseResumeButton,\n    hideCancelButton: hideCancelButton,\n    showLinkToFileUploadResult: showLinkToFileUploadResult,\n    showRemoveButtonAfterComplete: showRemoveButtonAfterComplete,\n    isWide: isWide,\n    metaFields: metaFields,\n    recoveredState: recoveredState,\n    isSingleFile: isSingleFile,\n    containerWidth: containerWidth,\n    containerHeight: containerHeight\n    // callbacks\n    ,\n    toggleFileCard: toggleFileCard,\n    handleRequestThumbnail: handleRequestThumbnail,\n    handleCancelThumbnail: handleCancelThumbnail,\n    role: \"listitem\",\n    openFileEditor: openFileEditor,\n    canEditFile: canEditFile,\n    toggleAddFilesPanel: toggleAddFilesPanel,\n    file: files[fileID]\n  })));\n  if (isSingleFile) {\n    return h(\"div\", {\n      class: \"uppy-Dashboard-files\"\n    }, renderRow(rows[0]));\n  }\n  return h(VirtualList, {\n    class: \"uppy-Dashboard-files\",\n    role: \"list\",\n    data: rows,\n    renderRow: renderRow,\n    rowHeight: rowHeight\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}