{"ast":null,"code":"import PropTypes from 'prop-types';\nimport { Uppy as UppyCore } from '@uppy/core';\n\n// The `uppy` prop receives the Uppy core instance.\nconst uppy = PropTypes.instanceOf(UppyCore);\n\n// A list of plugins to mount inside this component.\nconst plugins = PropTypes.arrayOf(PropTypes.string);\n\n// Language strings for this component.\nconst locale = PropTypes.shape({\n  strings: PropTypes.object,\n  // eslint-disable-line react/forbid-prop-types\n  pluralize: PropTypes.func\n});\n\n// List of meta fields for the editor in the Dashboard.\nconst metaField = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string\n});\nconst metaFields = PropTypes.oneOfType([PropTypes.arrayOf(metaField), PropTypes.func]);\n\n// A size in pixels (number) or with some other unit (string).\nconst cssSize = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\nexport { uppy, locale, plugins, metaFields, cssSize };","map":{"version":3,"names":["PropTypes","Uppy","UppyCore","uppy","instanceOf","plugins","arrayOf","string","locale","shape","strings","object","pluralize","func","metaField","id","isRequired","name","placeholder","metaFields","oneOfType","cssSize","number"],"sources":["/home/nainar/Documents/reactProjects/userAuthentiCator/registeration-login/node_modules/@uppy/react/lib/propTypes.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Uppy as UppyCore } from '@uppy/core';\n\n// The `uppy` prop receives the Uppy core instance.\nconst uppy = PropTypes.instanceOf(UppyCore);\n\n// A list of plugins to mount inside this component.\nconst plugins = PropTypes.arrayOf(PropTypes.string);\n\n// Language strings for this component.\nconst locale = PropTypes.shape({\n  strings: PropTypes.object,\n  // eslint-disable-line react/forbid-prop-types\n  pluralize: PropTypes.func\n});\n\n// List of meta fields for the editor in the Dashboard.\nconst metaField = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string\n});\nconst metaFields = PropTypes.oneOfType([PropTypes.arrayOf(metaField), PropTypes.func]);\n\n// A size in pixels (number) or with some other unit (string).\nconst cssSize = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\nexport { uppy, locale, plugins, metaFields, cssSize };"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,IAAIC,QAAQ,QAAQ,YAAY;;AAE7C;AACA,MAAMC,IAAI,GAAGH,SAAS,CAACI,UAAU,CAACF,QAAQ,CAAC;;AAE3C;AACA,MAAMG,OAAO,GAAGL,SAAS,CAACM,OAAO,CAACN,SAAS,CAACO,MAAM,CAAC;;AAEnD;AACA,MAAMC,MAAM,GAAGR,SAAS,CAACS,KAAK,CAAC;EAC7BC,OAAO,EAAEV,SAAS,CAACW,MAAM;EACzB;EACAC,SAAS,EAAEZ,SAAS,CAACa;AACvB,CAAC,CAAC;;AAEF;AACA,MAAMC,SAAS,GAAGd,SAAS,CAACS,KAAK,CAAC;EAChCM,EAAE,EAAEf,SAAS,CAACO,MAAM,CAACS,UAAU;EAC/BC,IAAI,EAAEjB,SAAS,CAACO,MAAM,CAACS,UAAU;EACjCE,WAAW,EAAElB,SAAS,CAACO;AACzB,CAAC,CAAC;AACF,MAAMY,UAAU,GAAGnB,SAAS,CAACoB,SAAS,CAAC,CAACpB,SAAS,CAACM,OAAO,CAACQ,SAAS,CAAC,EAAEd,SAAS,CAACa,IAAI,CAAC,CAAC;;AAEtF;AACA,MAAMQ,OAAO,GAAGrB,SAAS,CAACoB,SAAS,CAAC,CAACpB,SAAS,CAACO,MAAM,EAAEP,SAAS,CAACsB,MAAM,CAAC,CAAC;AACzE,SAASnB,IAAI,EAAEK,MAAM,EAAEH,OAAO,EAAEc,UAAU,EAAEE,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}