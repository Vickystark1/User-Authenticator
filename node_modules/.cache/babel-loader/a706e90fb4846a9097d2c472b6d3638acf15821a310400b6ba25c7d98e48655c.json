{"ast":null,"code":"import { h } from 'preact';\nimport { useEffect, useState, useCallback } from 'preact/hooks';\nimport classNames from 'classnames';\nimport { nanoid } from 'nanoid/non-secure';\nimport getFileTypeIcon from \"../../utils/getFileTypeIcon.js\";\nimport ignoreEvent from \"../../utils/ignoreEvent.js\";\nimport FilePreview from \"../FilePreview.js\";\nimport RenderMetaFields from \"./RenderMetaFields.js\";\nexport default function FileCard(props) {\n  var _getMetaFields;\n  const {\n    files,\n    fileCardFor,\n    toggleFileCard,\n    saveFileCard,\n    metaFields,\n    requiredMetaFields,\n    openFileEditor,\n    i18n,\n    i18nArray,\n    className,\n    canEditFile\n  } = props;\n  const getMetaFields = () => {\n    return typeof metaFields === 'function' ? metaFields(files[fileCardFor]) : metaFields;\n  };\n  const file = files[fileCardFor];\n  const computedMetaFields = (_getMetaFields = getMetaFields()) != null ? _getMetaFields : [];\n  const showEditButton = canEditFile(file);\n  const storedMetaData = {};\n  computedMetaFields.forEach(field => {\n    var _file$meta$field$id;\n    storedMetaData[field.id] = (_file$meta$field$id = file.meta[field.id]) != null ? _file$meta$field$id : '';\n  });\n  const [formState, setFormState] = useState(storedMetaData);\n  const handleSave = useCallback(ev => {\n    ev.preventDefault();\n    saveFileCard(formState, fileCardFor);\n  }, [saveFileCard, formState, fileCardFor]);\n  const updateMeta = (newVal, name) => {\n    setFormState({\n      ...formState,\n      [name]: newVal\n    });\n  };\n  const handleCancel = () => {\n    toggleFileCard(false);\n  };\n  const [form] = useState(() => {\n    const formEl = document.createElement('form');\n    formEl.setAttribute('tabindex', '-1');\n    formEl.id = nanoid();\n    return formEl;\n  });\n  useEffect(() => {\n    document.body.appendChild(form);\n    form.addEventListener('submit', handleSave);\n    return () => {\n      form.removeEventListener('submit', handleSave);\n      document.body.removeChild(form);\n    };\n  }, [form, handleSave]);\n  return h(\"div\", {\n    className: classNames('uppy-Dashboard-FileCard', className),\n    \"data-uppy-panelType\": \"FileCard\",\n    onDragOver: ignoreEvent,\n    onDragLeave: ignoreEvent,\n    onDrop: ignoreEvent,\n    onPaste: ignoreEvent\n  }, h(\"div\", {\n    className: \"uppy-DashboardContent-bar\"\n  }, h(\"div\", {\n    className: \"uppy-DashboardContent-title\",\n    role: \"heading\",\n    \"aria-level\": \"1\"\n  }, i18nArray('editing', {\n    file: h(\"span\", {\n      className: \"uppy-DashboardContent-titleFile\"\n    }, file.meta ? file.meta.name : file.name)\n  })), h(\"button\", {\n    className: \"uppy-DashboardContent-back\",\n    type: \"button\",\n    form: form.id,\n    title: i18n('finishEditingFile'),\n    onClick: handleCancel\n  }, i18n('cancel'))), h(\"div\", {\n    className: \"uppy-Dashboard-FileCard-inner\"\n  }, h(\"div\", {\n    className: \"uppy-Dashboard-FileCard-preview\",\n    style: {\n      backgroundColor: getFileTypeIcon(file.type).color\n    }\n  }, h(FilePreview, {\n    file: file\n  }), showEditButton && h(\"button\", {\n    type: \"button\",\n    className: \"uppy-u-reset uppy-c-btn uppy-Dashboard-FileCard-edit\",\n    onClick: event => {\n      // When opening the image editor we want to save any meta fields changes.\n      // Otherwise it's confusing for the user to click save in the editor,\n      // but the changes here are discarded. This bypasses validation,\n      // but we are okay with that.\n      handleSave(event);\n      openFileEditor(file);\n    }\n  }, i18n('editImage'))), h(\"div\", {\n    className: \"uppy-Dashboard-FileCard-info\"\n  }, h(RenderMetaFields, {\n    computedMetaFields: computedMetaFields,\n    requiredMetaFields: requiredMetaFields,\n    updateMeta: updateMeta,\n    form: form,\n    formState: formState\n  })), h(\"div\", {\n    className: \"uppy-Dashboard-FileCard-actions\"\n  }, h(\"button\", {\n    className: \"uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Dashboard-FileCard-actionsBtn\"\n    // If `form` attribute is supported, we want a submit button to trigger the form validation.\n    // Otherwise, fallback to a classic button with a onClick event handler.\n    ,\n\n    type: \"submit\",\n    form: form.id\n  }, i18n('saveChanges')), h(\"button\", {\n    className: \"uppy-u-reset uppy-c-btn uppy-c-btn-link uppy-Dashboard-FileCard-actionsBtn\",\n    type: \"button\",\n    onClick: handleCancel,\n    form: form.id\n  }, i18n('cancel')))));\n}","map":{"version":3,"names":["h","useEffect","useState","useCallback","classNames","nanoid","getFileTypeIcon","ignoreEvent","FilePreview","RenderMetaFields","FileCard","props","_getMetaFields","files","fileCardFor","toggleFileCard","saveFileCard","metaFields","requiredMetaFields","openFileEditor","i18n","i18nArray","className","canEditFile","getMetaFields","file","computedMetaFields","showEditButton","storedMetaData","forEach","field","_file$meta$field$id","id","meta","formState","setFormState","handleSave","ev","preventDefault","updateMeta","newVal","name","handleCancel","form","formEl","document","createElement","setAttribute","body","appendChild","addEventListener","removeEventListener","removeChild","onDragOver","onDragLeave","onDrop","onPaste","role","type","title","onClick","style","backgroundColor","color","event"],"sources":["/home/nainar/Documents/reactProjects/userAuthentiCator/registeration-login/node_modules/@uppy/dashboard/lib/components/FileCard/index.js"],"sourcesContent":["import { h } from 'preact';\nimport { useEffect, useState, useCallback } from 'preact/hooks';\nimport classNames from 'classnames';\nimport { nanoid } from 'nanoid/non-secure';\nimport getFileTypeIcon from \"../../utils/getFileTypeIcon.js\";\nimport ignoreEvent from \"../../utils/ignoreEvent.js\";\nimport FilePreview from \"../FilePreview.js\";\nimport RenderMetaFields from \"./RenderMetaFields.js\";\nexport default function FileCard(props) {\n  var _getMetaFields;\n  const {\n    files,\n    fileCardFor,\n    toggleFileCard,\n    saveFileCard,\n    metaFields,\n    requiredMetaFields,\n    openFileEditor,\n    i18n,\n    i18nArray,\n    className,\n    canEditFile\n  } = props;\n  const getMetaFields = () => {\n    return typeof metaFields === 'function' ? metaFields(files[fileCardFor]) : metaFields;\n  };\n  const file = files[fileCardFor];\n  const computedMetaFields = (_getMetaFields = getMetaFields()) != null ? _getMetaFields : [];\n  const showEditButton = canEditFile(file);\n  const storedMetaData = {};\n  computedMetaFields.forEach(field => {\n    var _file$meta$field$id;\n    storedMetaData[field.id] = (_file$meta$field$id = file.meta[field.id]) != null ? _file$meta$field$id : '';\n  });\n  const [formState, setFormState] = useState(storedMetaData);\n  const handleSave = useCallback(ev => {\n    ev.preventDefault();\n    saveFileCard(formState, fileCardFor);\n  }, [saveFileCard, formState, fileCardFor]);\n  const updateMeta = (newVal, name) => {\n    setFormState({\n      ...formState,\n      [name]: newVal\n    });\n  };\n  const handleCancel = () => {\n    toggleFileCard(false);\n  };\n  const [form] = useState(() => {\n    const formEl = document.createElement('form');\n    formEl.setAttribute('tabindex', '-1');\n    formEl.id = nanoid();\n    return formEl;\n  });\n  useEffect(() => {\n    document.body.appendChild(form);\n    form.addEventListener('submit', handleSave);\n    return () => {\n      form.removeEventListener('submit', handleSave);\n      document.body.removeChild(form);\n    };\n  }, [form, handleSave]);\n  return h(\"div\", {\n    className: classNames('uppy-Dashboard-FileCard', className),\n    \"data-uppy-panelType\": \"FileCard\",\n    onDragOver: ignoreEvent,\n    onDragLeave: ignoreEvent,\n    onDrop: ignoreEvent,\n    onPaste: ignoreEvent\n  }, h(\"div\", {\n    className: \"uppy-DashboardContent-bar\"\n  }, h(\"div\", {\n    className: \"uppy-DashboardContent-title\",\n    role: \"heading\",\n    \"aria-level\": \"1\"\n  }, i18nArray('editing', {\n    file: h(\"span\", {\n      className: \"uppy-DashboardContent-titleFile\"\n    }, file.meta ? file.meta.name : file.name)\n  })), h(\"button\", {\n    className: \"uppy-DashboardContent-back\",\n    type: \"button\",\n    form: form.id,\n    title: i18n('finishEditingFile'),\n    onClick: handleCancel\n  }, i18n('cancel'))), h(\"div\", {\n    className: \"uppy-Dashboard-FileCard-inner\"\n  }, h(\"div\", {\n    className: \"uppy-Dashboard-FileCard-preview\",\n    style: {\n      backgroundColor: getFileTypeIcon(file.type).color\n    }\n  }, h(FilePreview, {\n    file: file\n  }), showEditButton && h(\"button\", {\n    type: \"button\",\n    className: \"uppy-u-reset uppy-c-btn uppy-Dashboard-FileCard-edit\",\n    onClick: event => {\n      // When opening the image editor we want to save any meta fields changes.\n      // Otherwise it's confusing for the user to click save in the editor,\n      // but the changes here are discarded. This bypasses validation,\n      // but we are okay with that.\n      handleSave(event);\n      openFileEditor(file);\n    }\n  }, i18n('editImage'))), h(\"div\", {\n    className: \"uppy-Dashboard-FileCard-info\"\n  }, h(RenderMetaFields, {\n    computedMetaFields: computedMetaFields,\n    requiredMetaFields: requiredMetaFields,\n    updateMeta: updateMeta,\n    form: form,\n    formState: formState\n  })), h(\"div\", {\n    className: \"uppy-Dashboard-FileCard-actions\"\n  }, h(\"button\", {\n    className: \"uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Dashboard-FileCard-actionsBtn\"\n    // If `form` attribute is supported, we want a submit button to trigger the form validation.\n    // Otherwise, fallback to a classic button with a onClick event handler.\n    ,\n    type: \"submit\",\n    form: form.id\n  }, i18n('saveChanges')), h(\"button\", {\n    className: \"uppy-u-reset uppy-c-btn uppy-c-btn-link uppy-Dashboard-FileCard-actionsBtn\",\n    type: \"button\",\n    onClick: handleCancel,\n    form: form.id\n  }, i18n('cancel')))));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}