{"ast":null,"code":"export function filterNonFailedFiles(files) {\n  const hasError = file => 'error' in file && !!file.error;\n  return files.filter(file => !hasError(file));\n}\n\n// Don't double-emit upload-started for Golden Retriever-restored files that were already started\nexport function filterFilesToEmitUploadStarted(files) {\n  return files.filter(file => {\n    var _file$progress;\n    return !((_file$progress = file.progress) != null && _file$progress.uploadStarted) || !file.isRestored;\n  });\n}","map":{"version":3,"names":["filterNonFailedFiles","files","hasError","file","error","filter","filterFilesToEmitUploadStarted","_file$progress","progress","uploadStarted","isRestored"],"sources":["/home/nainar/Documents/reactProjects/userAuthentiCator/registeration-login/node_modules/@uppy/utils/lib/fileFilters.js"],"sourcesContent":["export function filterNonFailedFiles(files) {\n  const hasError = file => 'error' in file && !!file.error;\n  return files.filter(file => !hasError(file));\n}\n\n// Don't double-emit upload-started for Golden Retriever-restored files that were already started\nexport function filterFilesToEmitUploadStarted(files) {\n  return files.filter(file => {\n    var _file$progress;\n    return !((_file$progress = file.progress) != null && _file$progress.uploadStarted) || !file.isRestored;\n  });\n}"],"mappings":"AAAA,OAAO,SAASA,oBAAoBA,CAACC,KAAK,EAAE;EAC1C,MAAMC,QAAQ,GAAGC,IAAI,IAAI,OAAO,IAAIA,IAAI,IAAI,CAAC,CAACA,IAAI,CAACC,KAAK;EACxD,OAAOH,KAAK,CAACI,MAAM,CAACF,IAAI,IAAI,CAACD,QAAQ,CAACC,IAAI,CAAC,CAAC;AAC9C;;AAEA;AACA,OAAO,SAASG,8BAA8BA,CAACL,KAAK,EAAE;EACpD,OAAOA,KAAK,CAACI,MAAM,CAACF,IAAI,IAAI;IAC1B,IAAII,cAAc;IAClB,OAAO,EAAE,CAACA,cAAc,GAAGJ,IAAI,CAACK,QAAQ,KAAK,IAAI,IAAID,cAAc,CAACE,aAAa,CAAC,IAAI,CAACN,IAAI,CAACO,UAAU;EACxG,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}